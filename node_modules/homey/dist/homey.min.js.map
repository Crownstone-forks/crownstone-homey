{"version":3,"file":"homey.min.js","sources":["../src/fn/has-class.js","../src/fn/add-class.js","../src/utils.js","../src/fn/parent.js","../src/fn/after.js","../src/fn/append.js","../src/fn/before.js","../src/fn/matches.js","../src/fn/parent-by.js","../src/fn/closest.js","../src/fn/dataset.js","../src/fn/on.js","../src/fn/has-attr.js","../src/fn/parents.js","../src/fn/prepend.js","../src/fn/remove-attr.js","../src/fn/remove-class.js","../src/fn/toggle-class.js","../src/fn/toggle-classes.js","../src/fn/body.js","../src/fn/dispatch.js","../src/fn/html.js","../src/fn/add-classes.js","../src/fn/delegate.js","../src/fn/get-attr.js","../src/fn/get-html.js","../src/fn/get-text.js","../src/fn/once.js","../src/fn/parents-by.js","../src/fn/query.js","../src/fn/query-all.js","../src/fn/remove.js","../src/fn/remove-classes.js","../src/fn/set-attr.js","../src/fn/set-html.js","../src/fn/set-text.js"],"sourcesContent":["/* @flow */\n\nimport type { CSSClass } from \"../types\";\n\nfunction hasClass(element: Element, cssClass: CSSClass): boolean {\n  return element.classList.contains(cssClass);\n}\n\nexport default hasClass;\n","/* @flow */\n\nimport type { CSSClass } from \"../types\";\n\nimport hasClass from \"./has-class\";\n\nfunction addClass(element: Element, cssClass: CSSClass): boolean {\n  const result = !hasClass(element, cssClass);\n\n  if (result) {\n    element.classList.add(cssClass);\n  }\n\n  return result;\n}\n\nexport default addClass;\n","/* @flow */\n\nfunction drop(arrayLike: any, count: number): Array<any> {\n  return Array.prototype.slice.call(arrayLike, count);\n}\n\nfunction getProperty(\n  object: { [key: string]: any },\n  property: string,\n  defaultValue: any\n): any {\n  return Object.prototype.hasOwnProperty.call(object, property)\n    ? object[property]\n    : defaultValue;\n}\n\nfunction toArray(arrayLike: any): Array<any> {\n  return Array.prototype.slice.call(arrayLike);\n}\n\nexport { drop, getProperty, toArray };\n","/* @flow */\n\nfunction parent(element: Element): ?Element {\n  return element.parentElement;\n}\n\nexport default parent;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { Insertable } from \"../types\";\n\nimport { drop, toArray } from \"../utils\";\n\nimport parent from \"./parent\";\n\nfunction afterNode(\n  element: Element,\n  parentElement: Element,\n  insertable: Node\n): void {\n  parentElement.insertBefore(insertable, element.nextSibling);\n}\n\ndeclare function after(\n  element: Element,\n  ...insertables: Array<Insertable>\n): void;\n\nfunction after(element) {\n  const parentElement = parent(element);\n\n  if (!parentElement) {\n    throw new Error(\"The element has no parent\");\n  }\n\n  drop(arguments, 1).reverse().forEach(insertable => {\n    if (typeof insertable === \"string\") {\n      element.insertAdjacentHTML(\"afterend\", insertable);\n    } else if (insertable instanceof Node) {\n      afterNode(element, parentElement, insertable);\n    } else {\n      toArray(insertable).reverse().forEach(node => {\n        afterNode(element, parentElement, node);\n      });\n    }\n  });\n}\n\nexport default after;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { Insertable } from \"../types\";\n\nimport { drop, toArray } from \"../utils\";\n\nfunction appendNode(element: Element, insertable: Node): void {\n  element.appendChild(insertable);\n}\n\ndeclare function append(\n  element: Element,\n  ...insertables: Array<Insertable>\n): void;\n\nfunction append(element) {\n  drop(arguments, 1).forEach(insertable => {\n    if (typeof insertable === \"string\") {\n      element.insertAdjacentHTML(\"beforeend\", insertable);\n    } else if (insertable instanceof Node) {\n      appendNode(element, insertable);\n    } else {\n      toArray(insertable).forEach(node => {\n        appendNode(element, node);\n      });\n    }\n  });\n}\n\nexport default append;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { Insertable } from \"../types\";\n\nimport { drop, toArray } from \"../utils\";\n\nimport parent from \"./parent\";\n\nfunction beforeNode(\n  element: Element,\n  parentElement: Element,\n  insertable: Node\n): void {\n  parentElement.insertBefore(insertable, element);\n}\n\ndeclare function before(\n  element: Element,\n  ...insertables: Array<Insertable>\n): void;\n\nfunction before(element) {\n  const parentElement = parent(element);\n\n  if (!parentElement) {\n    throw new Error(\"The element has no parent\");\n  }\n\n  drop(arguments, 1).forEach(insertable => {\n    if (typeof insertable === \"string\") {\n      element.insertAdjacentHTML(\"beforebegin\", insertable);\n    } else if (insertable instanceof Node) {\n      beforeNode(element, parentElement, insertable);\n    } else {\n      toArray(insertable).forEach(node => {\n        beforeNode(element, parentElement, node);\n      });\n    }\n  });\n}\n\nexport default before;\n","/* @flow */\n\nimport type { CSSSelector } from \"../types\";\n\ntype Matches = (selector: CSSSelector) => boolean;\n\nfunction getMatchesFn(): Matches {\n  const element = (document.createElement(\"div\"): any);\n\n  return (\n    element.matches ||\n    element.matchesSelector ||\n    element.msMatchesSelector ||\n    element.mozMatchesSelector ||\n    element.webkitMatchesSelector ||\n    element.oMatchesSelector\n  );\n}\n\nconst matchesFn: Matches = getMatchesFn();\n\nfunction matches(element: Element, selector: CSSSelector): boolean {\n  return matchesFn.call(element, selector);\n}\n\nexport default matches;\n","/* @flow */\n\nimport type { CSSSelector, Predicate } from \"../types\";\n\nimport matches from \"./matches\";\nimport parent from \"./parent\";\n\nfunction parentBy(\n  element: Element,\n  condition: Predicate | CSSSelector\n): ?Element {\n  const predicate = typeof condition === \"string\"\n    ? e => matches(e, condition)\n    : condition;\n\n  let current = parent(element);\n\n  while (current) {\n    if (predicate(current)) {\n      return current;\n    }\n\n    current = parent(current);\n  }\n\n  return null;\n}\n\nexport default parentBy;\n","/* @flow */\n\nimport type { CSSSelector, Predicate } from \"../types\";\n\nimport matches from \"./matches\";\nimport parentBy from \"./parent-by\";\n\ntype Closest = (element: Element, selector: CSSSelector) => ?Element;\n\nfunction closestPolyfill(element: Element, selector: CSSSelector): ?Element {\n  if (matches(element, selector)) {\n    return element;\n  }\n\n  return parentBy(element, selector);\n}\n\nfunction closestNative(element: Element, selector: CSSSelector): ?Element {\n  return element.closest(selector);\n}\n\nfunction getClosestFn(): Closest {\n  const element = document.createElement(\"div\");\n\n  return element.closest ? closestNative : closestPolyfill;\n}\n\nconst closestFn: Closest = getClosestFn();\n\nfunction closest(\n  element: Element,\n  condition: CSSSelector | Predicate\n): ?Element {\n  if (typeof condition === \"string\") {\n    return closestFn(element, condition);\n  }\n\n  if (condition(element)) {\n    return element;\n  }\n\n  return parentBy(element, condition);\n}\n\nexport default closest;\n","/* @flow */\n\nimport type { Dataset } from \"../types\";\n\nfunction datasetNative(element: HTMLElement): Dataset {\n  return element.dataset;\n}\n\nfunction datasetPolyfill(element: HTMLElement): Dataset {\n  return [].slice.call(element.attributes).reduce((data, attribute) => {\n    const name = attribute.name;\n\n    if (/^data-(.+)/.test(name)) {\n      const normalizedName = name\n        .substr(5)\n        .replace(/-\\w/g, str => str[1].toUpperCase());\n\n      data[normalizedName] = attribute.value;\n    }\n\n    return data;\n  }, {});\n}\n\nfunction getDatasetFn() {\n  const element = document.createElement(\"div\");\n\n  return element.dataset ? datasetNative : datasetPolyfill;\n}\n\nconst datasetFn = getDatasetFn();\n\nfunction dataset(element: HTMLElement): Dataset {\n  return datasetFn(element);\n}\n\nexport default dataset;\n","/* @flow */\n/* eslint no-redeclare: \"off\", import/no-mutable-exports: \"off\" */\n\nimport type {\n  CustomEventHandler,\n  DelegateEventHandler,\n  EventType\n} from \"../types\";\n\ndeclare function on(\n  target: EventTarget,\n  eventType: MouseEventTypes,\n  handler: MouseEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: FocusEventTypes,\n  handler: FocusEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: KeyboardEventTypes,\n  handler: KeyboardEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: TouchEventTypes,\n  handler: TouchEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: WheelEventTypes,\n  handler: WheelEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: ProgressEventTypes,\n  ler: ProgressEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: DragEventTypes,\n  handler: DragEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: AnimationEventTypes,\n  handler: AnimationEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: EventType,\n  handler: CustomEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: EventType,\n  handler: DelegateEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function on(\n  target: EventTarget,\n  eventType: EventType,\n  handler: EventHandler,\n  useCapture?: boolean\n): () => void;\n\nfunction on(target, eventType, handler, useCapture = false) {\n  target.addEventListener(eventType, (handler: any), useCapture);\n\n  return () =>\n    target.removeEventListener(eventType, (handler: any), useCapture);\n}\n\nexport default on;\n","/* @flow */\n\nfunction hasAttr(element: Element, attribute: string): boolean {\n  return element.hasAttribute(attribute);\n}\n\nexport default hasAttr;\n","/* @flow */\n\nimport type { Elements } from \"../types\";\n\nimport parent from \"./parent\";\n\nfunction parents(element: Element): Elements {\n  const result = [];\n\n  let current = parent(element);\n\n  while (current) {\n    result.push(current);\n\n    current = parent(current);\n  }\n\n  return result;\n}\n\nexport default parents;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { Insertable } from \"../types\";\n\nimport { drop, toArray } from \"../utils\";\n\nfunction prependNode(element: Element, insertable: Node): void {\n  element.insertBefore(insertable, element.firstChild);\n}\n\ndeclare function prepend(\n  element: Element,\n  ...insertables: Array<Insertable>\n): void;\n\nfunction prepend(element) {\n  drop(arguments, 1).reverse().forEach(insertable => {\n    if (typeof insertable === \"string\") {\n      element.insertAdjacentHTML(\"afterbegin\", insertable);\n    } else if (insertable instanceof Node) {\n      prependNode(element, insertable);\n    } else {\n      toArray(insertable).reverse().forEach(node => {\n        prependNode(element, node);\n      });\n    }\n  });\n}\n\nexport default prepend;\n","/* @flow */\n\nfunction removeAttr(element: Element, attribute: string): void {\n  element.removeAttribute(attribute);\n}\n\nexport default removeAttr;\n","/* @flow */\n\nimport type { CSSClass } from \"../types\";\n\nimport hasClass from \"./has-class\";\n\nfunction removeClass(element: Element, cssClass: CSSClass): boolean {\n  const result = hasClass(element, cssClass);\n\n  if (result) {\n    element.classList.remove(cssClass);\n  }\n\n  return result;\n}\n\nexport default removeClass;\n","/* @flow */\n\nimport type { CSSClass } from \"../types\";\n\nimport addClass from \"./add-class\";\nimport hasClass from \"./has-class\";\nimport removeClass from \"./remove-class\";\n\nfunction toggleClass(\n  element: Element,\n  cssClass: CSSClass,\n  state?: boolean\n): boolean {\n  const target = arguments.length === 3 ? state : !hasClass(element, cssClass);\n  const toggleFn = target ? addClass : removeClass;\n\n  return toggleFn(element, cssClass);\n}\n\nexport default toggleClass;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { CSSClass, CSSClassesMap } from \"../types\";\n\nimport toggleClass from \"./toggle-class\";\n\nfunction toggleClassesByMap(\n  element: Element,\n  cssClasses: CSSClassesMap\n): boolean {\n  return Object.keys(cssClasses).reduce((result, cssClass) => {\n    const state = cssClasses[cssClass];\n\n    return toggleClass(element, cssClass, state) || result;\n  }, false);\n}\n\ndeclare function toggleClasses(\n  element: Element,\n  ...cssClasses: Array<CSSClass | CSSClassesMap>\n): boolean;\n\nfunction toggleClasses(element) {\n  const cssClasses = Array.prototype.slice.call(arguments, 1);\n\n  return cssClasses.reduce((result, cssClass) => {\n    const currentResult = typeof cssClass === \"string\"\n      ? toggleClass(element, cssClass)\n      : toggleClassesByMap(element, cssClass);\n\n    return currentResult || result;\n  }, false);\n}\n\nexport default toggleClasses;\n","/* @flow */\n\nconst body: Element = window.document.body;\n\nexport default body;\n","/* @flow */\n\nimport type { EventType } from \"../types\";\n\nimport { getProperty } from \"../utils\";\n\ntype EventOptions = {\n  bubbles?: boolean,\n  cancelable?: boolean\n};\n\nfunction createWithConstructor(\n  eventType: EventType,\n  detail: any,\n  bubbles: boolean,\n  cancelable: boolean\n): CustomEvent {\n  return new CustomEvent(eventType, { bubbles, cancelable, detail });\n}\n\nfunction createWithInit(\n  eventType: EventType,\n  detail: any,\n  bubbles: boolean,\n  cancelable: boolean\n): CustomEvent {\n  const event = document.createEvent(\"CustomEvent\");\n\n  event.initCustomEvent(eventType, bubbles, cancelable, detail);\n\n  return event;\n}\n\nconst create = typeof window.CustomEvent === \"function\"\n  ? createWithConstructor\n  : createWithInit;\n\nfunction dispatch(\n  target: EventTarget,\n  eventType: EventType,\n  detail: any = {},\n  options?: EventOptions = { bubbles: true, cancelable: true }\n): boolean {\n  const bubbles = getProperty(options, \"bubbles\", true);\n  const cancelable = getProperty(options, \"cancelable\", true);\n  const event = create(eventType, detail, bubbles, cancelable);\n\n  return target.dispatchEvent(event);\n}\n\nexport default dispatch;\n","/* @flow */\n\nconst html: Element = window.document.documentElement;\n\nexport default html;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { CSSClass } from \"../types\";\n\nimport addClass from \"./add-class\";\n\ndeclare function addClasses(\n  element: Element,\n  ...cssClasses: Array<CSSClass>\n): boolean;\n\nfunction addClasses(element): boolean {\n  const cssClasses = Array.prototype.slice.call(arguments, 1);\n\n  return cssClasses.reduce(\n    (result, cssClass) => addClass(element, cssClass) || result,\n    false\n  );\n}\n\nexport default addClasses;\n","/* @flow */\n/* eslint no-redeclare: \"off\", import/no-mutable-exports: \"off\" */\n\nimport type {\n  CSSSelector,\n  CustomEventHandler,\n  DelegateEvent,\n  DelegateEventHandler,\n  EventType\n} from \"../types\";\n\nimport matches from \"./matches\";\nimport parent from \"./parent\";\nimport on from \"./on\";\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: MouseEventTypes,\n  handler: MouseEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: FocusEventTypes,\n  handler: FocusEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: KeyboardEventTypes,\n  handler: KeyboardEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: TouchEventTypes,\n  handler: TouchEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: WheelEventTypes,\n  handler: WheelEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: ProgressEventTypes,\n  ler: ProgressEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: DragEventTypes,\n  handler: DragEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: AnimationEventTypes,\n  handler: AnimationEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: EventType,\n  handler: CustomEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: EventType,\n  handler: DelegateEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function delegate(\n  target: EventTarget,\n  selector: CSSSelector,\n  eventType: EventType,\n  handler: EventHandler,\n  useCapture?: boolean\n): () => void;\n\nfunction delegate(target, selector, eventType, handler, useCapture = false) {\n  function wrappedHandler(event) {\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n\n    let current = event.target;\n\n    while (current) {\n      if (matches(current, selector)) {\n        ((event: any): DelegateEvent).delegateTarget = target;\n\n        handler(event);\n\n        delete ((event: any): DelegateEvent).delegateTarget;\n\n        return;\n      }\n\n      if (current === target) {\n        return;\n      }\n\n      current = parent(current);\n    }\n  }\n\n  return on(target, eventType, wrappedHandler, useCapture);\n}\n\nexport default delegate;\n","/* @flow */\n\nimport hasAttr from \"./has-attr\";\n\nfunction getAttr(\n  element: Element,\n  attribute: string,\n  defaultValue: ?string = null\n): ?string {\n  if (hasAttr(element, attribute)) {\n    return element.getAttribute(attribute);\n  }\n\n  return defaultValue;\n}\n\nexport default getAttr;\n","/* @flow */\n\nfunction getHtml(element: Element): string {\n  return element.innerHTML;\n}\n\nexport default getHtml;\n","/* @flow */\n\nfunction getText(element: Element): string {\n  return element.textContent;\n}\n\nexport default getText;\n","/* @flow */\n/* eslint no-redeclare: \"off\", import/no-mutable-exports: \"off\" */\n\nimport type {\n  CustomEventHandler,\n  DelegateEventHandler,\n  EventType\n} from \"../types\";\n\nimport on from \"./on\";\n\ndeclare function once(\n  target: EventTarget,\n  eventType: MouseEventTypes,\n  handler: MouseEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: FocusEventTypes,\n  handler: FocusEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: KeyboardEventTypes,\n  handler: KeyboardEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: TouchEventTypes,\n  handler: TouchEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: WheelEventTypes,\n  handler: WheelEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: ProgressEventTypes,\n  ler: ProgressEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: DragEventTypes,\n  handler: DragEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: AnimationEventTypes,\n  handler: AnimationEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: EventType,\n  handler: CustomEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: EventType,\n  handler: DelegateEventHandler,\n  useCapture?: boolean\n): () => void;\n\ndeclare function once(\n  target: EventTarget,\n  eventType: EventType,\n  handler: EventHandler,\n  useCapture?: boolean\n): () => void;\n\nfunction once(target, eventType, handler, useCapture = false) {\n  function wrappedHandler(event) {\n    target.removeEventListener(eventType, wrappedHandler, useCapture);\n\n    handler(event);\n  }\n\n  return on(target, eventType, wrappedHandler, useCapture);\n}\n\nexport default once;\n","/* @flow */\n\nimport type { CSSSelector, Elements, Predicate } from \"../types\";\n\nimport matches from \"./matches\";\nimport parents from \"./parents\";\n\nfunction parentsBy(\n  element: Element,\n  condition: CSSSelector | Predicate\n): Elements {\n  const predicate = typeof condition === \"string\"\n    ? e => matches(e, condition)\n    : condition;\n\n  return parents(element).filter(predicate);\n}\n\nexport default parentsBy;\n","/* @flow */\n\nimport type { CSSSelector } from \"../types\";\n\nfunction query(element: Element, selector: CSSSelector): ?Element {\n  return element.querySelector(selector);\n}\n\nexport default query;\n","/* @flow */\n\nimport type { CSSSelector, Elements } from \"../types\";\n\nimport { toArray } from \"../utils\";\n\nfunction queryAll(element: Element, selector: CSSSelector): Elements {\n  const elements = element.querySelectorAll(selector);\n\n  return (toArray(elements): Elements);\n}\n\nexport default queryAll;\n","/* @flow */\n\nimport parent from \"./parent\";\n\nfunction remove(element: Element): boolean {\n  const parentElement = parent(element);\n\n  if (parentElement) {\n    parentElement.removeChild(element);\n\n    return true;\n  }\n\n  return false;\n}\n\nexport default remove;\n","/* @flow */\n/* eslint no-redeclare: \"off\" */\n\nimport type { CSSClass } from \"../types\";\n\nimport removeClass from \"./remove-class\";\n\ndeclare function removeClasses(\n  element: Element,\n  ...cssClasses: Array<CSSClass>\n): boolean;\n\nfunction removeClasses(element) {\n  const cssClasses = Array.prototype.slice.call(arguments, 1);\n\n  return cssClasses.reduce(\n    (result, cssClass) => removeClass(element, cssClass) || result,\n    false\n  );\n}\n\nexport default removeClasses;\n","/* @flow */\n\nimport removeAttr from \"./remove-attr\";\n\nfunction setAttr(element: Element, attribute: string, value: any): void {\n  if (value === null) {\n    removeAttr(element, attribute);\n  } else {\n    element.setAttribute(attribute, value);\n  }\n}\n\nexport default setAttr;\n","/* @flow */\n\nfunction setHtml(element: Element, html: string): void {\n  element.innerHTML = html;\n}\n\nexport default setHtml;\n","/* @flow */\n\nfunction setText(element: Element, text: string): void {\n  element.textContent = text;\n}\n\nexport default setText;\n"],"names":["hasClass","element","cssClass","classList","contains","addClass","result","add","drop","arrayLike","count","Array","prototype","slice","call","getProperty","object","property","defaultValue","Object","hasOwnProperty","toArray","parent","parentElement","afterNode","insertable","insertBefore","nextSibling","appendNode","appendChild","beforeNode","matches","selector","matchesFn","parentBy","condition","predicate","e","current","closestPolyfill","closestNative","closest","datasetNative","dataset","datasetPolyfill","attributes","reduce","data","attribute","name","test","substr","replace","str","toUpperCase","value","on","target","eventType","handler","useCapture","addEventListener","removeEventListener","hasAttr","hasAttribute","parents","push","prependNode","firstChild","removeAttr","removeAttribute","removeClass","remove","toggleClass","state","arguments","length","toggleClassesByMap","cssClasses","keys","body","window","document","createElement","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","getMatchesFn","closestFn","datasetFn","create","CustomEvent","detail","bubbles","cancelable","event","createEvent","initCustomEvent","html","documentElement","Error","reverse","forEach","insertAdjacentHTML","Node","node","Element","delegateTarget","options","dispatchEvent","getAttribute","innerHTML","textContent","wrappedHandler","filter","querySelector","querySelectorAll","removeChild","setAttribute","text"],"mappings":"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"}